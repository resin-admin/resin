/*!!!
section: Naming Conventions
description: |
  In general, the conventions used on this site follow the conventions outlined here: [https://gist.github.com/fat/a47b882eb5f84293c4ed](https://gist.github.com/fat/a47b882eb5f84293c4ed).

  In particular, these are the following key concepts:

  - classes, not ids

  - camelCase, not dashes for class names (e.g. `.infoTile`)

  - dashes, not camelCase for stylesheet variables (e.g. `primary-text-color`)

  - single dashes for children elements (e.g. `.infoTile-title`)

  - double dashes for modifiers (e.g. `infoTile--large`)

  - `.is-` prefix for states (e.g. `.is-active`)

  - `.u-` prefix for general utility classes (e.g. `.u-alignRight`) 

  - `.js-` prefix for javascript targets (e.g. `.js-gallery`)
*/

/*!!!
section: Folder Structure
description: |
  **Objects**: Objects are the basic building blocks of any site. Pages are assembled by laying out various objects in various arrangements (using the site's scaffolding). Object file naming should be the pluralized version of the object they contain (e.g. `_infoTiles.styl` not `_info-tile.styl`). Each object should be self-contained and independant, thus the order objects are loaded should be irrelevant.

  **Initializers**: Code that needs to be loaded before the objects should go here. This would include things that objects would need to reference like colour variables, mixins, etc.

  **Pages**: Page specific overrides go here. Ideally, these should be used as little as possible, as writing extensive page specific overrides leads to code that is not re-usable.
*/
